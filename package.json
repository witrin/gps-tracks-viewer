{
	"name": "gps-tracks-viewer",
	"version": "1.0.0-alpha",
	"description": "",
	"author": "Jawan Kolanowski <kolanowj@hochschule-trier.de>",
	"contributors": [
		"Christoph Braun <braunc@hochschule-trier.de>"
	],
	"license": "MIT",
	"config": {
		"target": {
			"folder": "dist/"
		}
	},
	"devDependencies": {
		"browserify": "^14.4.0",
		"eslint": "^4.3.0",
		"onchange": "^3.2.1",
		"concurrently": "^3.5.0",
		"clean-css-cli": "^4.1.6",
		"uglify-js": "^3.0.26",
		"less": "^2.7.2",
		"babel-cli": "^6.24.1",
		"babel-plugin-transform-es2015-modules-commonjs": "^6.24.1",
		"babel-plugin-add-module-exports": "^0.2.1",
		"babel-plugin-transform-custom-element-classes": "^0.1.0"
	},
	"dependencies": {
		"leaflet": "^1.0.3",
		"@webcomponents/custom-elements": "webcomponents/custom-elements",
		"modernizr": "^3.5.0"
	},
	"scripts": {
		"init": "mkdir -p ${npm_package_config_target_folder} tmp && modernizr -c modernizr.json -d tmp",
		"clean": "rm -rf ${npm_package_config_target_folder} tmp node_modules",

		"lint:scripts": "eslint 'src/**/*.js'",
		"compile:scripts": "babel src --out-dir tmp",
		"bundle:scripts": "browserify tmp/boot.js > ${npm_package_config_target_folder}bundle.js && cp src/*.example ${npm_package_config_target_folder}",
		"compress:scripts": "uglifyjs ${npm_package_config_target_folder}/bundle.js -c -m -o ${npm_package_config_target_folder}/bundle.js",

		"compile:styles": "for file in src/*.less src/**/*.less; do lessc $file tmp/`expr match \"$file\" 'src\/\\(.*\\)\\.less'`.css; done",
		"bundle:styles": "cp tmp/styles.css ${npm_package_config_target_folder}/bundle.css",
		"compress:styles": "cleancss -m -c -o ${npm_package_config_target_folder}/bundle.css ${npm_package_config_target_folder}/bundle.css",
		
		"debug:scripts": "npm run lint:scripts && npm run compile:scripts && npm run bundle:scripts",
		"debug:markup": "cp src/index.html ${npm_package_config_target_folder}",
		"debug:styles": "npm run compile:styles && npm run bundle:styles",

		"watch:scripts": "onchange 'src/**/*.js' -w -i -- npm run debug:scripts",
		"watch:styles": "onchange 'src/**/*.less' -w -i -- npm run debug:styles",
		"watch:markup": "onchange 'src/**/*.html' -w -i -- npm run debug:markup",
		
		"build:scripts": "npm run debug:scripts && npm run compress:scripts",
		"build:markup": "npm run debug:markup",
		"build:styles": "npm run debug:styles && npm run compress:styles",

		"prebuild": "npm run init",
		"predebug": "npm run init",
		"prewatch": "npm run init",

		"lint": "npm run lint:scripts",
		"debug": "npm run debug:markup && npm run debug:styles && npm run debug:scripts",
		"watch": "concurrently --raw --kill-others 'npm run watch:scripts' 'npm run watch:markup' 'npm run watch:styles'",
		"build": "npm run build:markup && npm run build:styles && npm run build:scripts"
	}
}
